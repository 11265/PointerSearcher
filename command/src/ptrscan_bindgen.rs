// automatically generated by rust-bindgen 0.69.4

pub const SUCCESS: ::core::ffi::c_int = 0;

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFIPointerScan {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFIModule {
    pub start: usize,
    pub end: usize,
    pub name: *const ::core::ffi::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFIRange {
    pub left: usize,
    pub right: usize,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFIParam {
    pub addr: usize,
    pub depth: usize,
    pub srange: FFIRange,
    pub lrange: *const FFIRange,
    pub node: *const usize,
    pub last: *const isize,
    pub max: *const usize,
    pub cycle: bool,
    pub raw1: bool,
    pub raw2: bool,
    pub raw3: bool,
}

#[link(name = "ptrscan")]
extern "C" {
    pub fn get_last_error(code: ::core::ffi::c_int) -> *const ::core::ffi::c_char;
    pub fn ptrscan_init() -> *mut FFIPointerScan;
    pub fn ptrscan_free(ptr: *mut FFIPointerScan);
    pub fn ptrscan_version() -> *const ::core::ffi::c_char;
    pub fn ptrscan_attach_process(ptr: *mut FFIPointerScan, pid: i32) -> ::core::ffi::c_int;
    pub fn ptrscan_load_pointer_map_file(
        ptr: *mut FFIPointerScan,
        path: *const ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    pub fn ptrscan_list_modules(
        ptr: *mut FFIPointerScan,
        modules: *mut *const FFIModule,
        size: *mut usize,
    ) -> ::core::ffi::c_int;
    pub fn ptrscan_create_pointer_map_file(
        ptr: *mut FFIPointerScan,
        modules: *const FFIModule,
        size: usize,
        pathname: *const ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    pub fn ptrscan_create_pointer_map(
        ptr: *mut FFIPointerScan,
        modules: *const FFIModule,
        size: usize,
    ) -> ::core::ffi::c_int;
    pub fn ptrscan_scan_pointer_chain(
        ptr: *mut FFIPointerScan,
        param: FFIParam,
        pathname: *const ::core::ffi::c_char,
    ) -> ::core::ffi::c_int;
    pub fn ptrscan_read_memory_exact(
        ptr: *mut FFIPointerScan,
        addr: usize,
        data: *mut u8,
        size: usize,
    ) -> ::core::ffi::c_int;
}
